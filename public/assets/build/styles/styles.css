/*! sanitize.css v5.0.0 | CC0 License | github.com/jonathantneal/sanitize.css */button,hr,input{overflow:visible}audio,canvas,progress,video{display:inline-block}progress,sub,sup{vertical-align:baseline}[aria-disabled],html{cursor:default}*,::after,::before{background-repeat:no-repeat;-webkit-box-sizing:inherit;box-sizing:inherit}html,legend{-webkit-box-sizing:border-box}::after,::before{text-decoration:inherit;vertical-align:inherit}html{box-sizing:border-box;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section{display:block}body,button,input,optgroup,select,textarea{margin:0}h1{font-size:2em;margin:.67em 0}figure{margin:1em 40px}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0}nav ol,nav ul{list-style:none}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}a{background-color:transparent;-webkit-text-decoration-skip:objects}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:bolder}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative}sub{bottom:-.25em}sup{top:-.5em}::-moz-selection{background-color:#b3d4fc;color:#000;text-shadow:none}::selection{background-color:#b3d4fc;color:#000;text-shadow:none}audio,canvas,iframe,img,svg,video{vertical-align:middle}audio:not([controls]){display:none;height:0}img{border-style:none}svg{fill:currentColor}svg:not(:root){overflow:hidden}table{border-collapse:collapse}button,input,select,textarea{color:inherit;font-size:inherit;line-height:inherit}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:ButtonText dotted 1px}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}textarea{overflow:auto;resize:vertical}[type=checkbox],[type=radio]{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}[hidden],template{display:none}[tabindex],a,area,button,input,label,select,summary,textarea{-ms-touch-action:manipulation;touch-action:manipulation}[aria-busy=true]{cursor:progress}[aria-controls]{cursor:pointer}[aria-hidden=false][hidden]:not(:focus){clip:rect(0,0,0,0);display:inherit;position:absolute}*{box-sizing:border-box}body,html{height:100vh;background-color:#333}.top-navbar{margin-bottom:.5em}.top-navbar .navbar-brand{margin:0;padding:0}.top-navbar .toggle-btn{float:right}.top-navbar .toggle-btn img{width:18px;height:18px}.cat-filter input.cat-filter-input{max-width:140px}.cat-filter .btn-addcat{padding:.8em}.cat-filter .btn-addcat svg{-webkit-animation:colorPulseSVG 10s infinite;animation:colorPulseSVG 10s infinite;height:32px;width:32px}.cat-filter .btn-addcat:after{content:'+';display:inline-block;vertical-align:top}.cat-filter .btn-addcat:hover{text-decoration:none}.fit-viewport-height{height:100vh}.site-wrapper{display:table;width:100%;height:100%;min-height:100%}.no-padd{padding:0}.not-rounded,.not-rounded:first-child,.not-rounded:last-child{border-radius:0}.map-container{position:relative;height:100%;left:35%;width:65%}@media screen and (min-width:800px){.map-container{left:30%;width:70%}}@media screen and (min-width:1200px){.map-container{left:20%;width:80%}}.map-container #map{height:100%}.sidebar-options{position:absolute;left:0;top:0;bottom:0;z-index:99;background:#fff;width:30%}@media screen and (max-width:800px){.sidebar-options{width:35%}}@media screen and (min-width:1200px){.sidebar-options{width:20%}}.sidebar-options .sidebar-control-buttons{-ms-flex-wrap:wrap;flex-wrap:wrap}.sidebar-options #sidebar-toggle-in{-webkit-animation:fadeIn 3s;animation:fadeIn 3s;position:absolute;top:.5em;padding-left:.5em;display:none}.sidebar-options #sidebar-toggle-in img{width:24px;height:24px}.sidebar-options button{cursor:pointer}.gm-style-iw{text-align:center;overflow:scroll}.info-box-custom{text-align:center;-webkit-animation:fadeIn 2s;animation:fadeIn 2s}.infoBox{-webkit-animation:fadeIn 1s;animation:fadeIn 1s}.sidebar-options__nav{background:#2f4f4f}@keyframes fadeIn{from{opacity:0}to{opacity:1}}@-webkit-keyframes colorPulseSVG{0%,100%{fill:#fff}50%{fill:#5cb85c}}@keyframes colorPulseSVG{0%,100%{fill:#fff}50%{fill:#5cb85c}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
