/*! sanitize.css v5.0.0 | CC0 License | github.com/jonathantneal/sanitize.css */button,hr,input{overflow:visible}audio,canvas,progress,video{display:inline-block}progress,sub,sup{vertical-align:baseline}[aria-disabled],html{cursor:default}[aria-controls],button{cursor:pointer}*,::after,::before{background-repeat:no-repeat;-webkit-box-sizing:inherit;box-sizing:inherit}html,legend{-webkit-box-sizing:border-box}::after,::before{text-decoration:inherit;vertical-align:inherit}html{box-sizing:border-box;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section{display:block}body,button,input,optgroup,select,textarea{margin:0}h1{font-size:2em;margin:.67em 0}figure{margin:1em 40px}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0}nav ol,nav ul{list-style:none}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}a{background-color:transparent;-webkit-text-decoration-skip:objects}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:bolder}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative}sub{bottom:-.25em}sup{top:-.5em}::-moz-selection{background-color:#b3d4fc;color:#000;text-shadow:none}::selection{background-color:#b3d4fc;color:#000;text-shadow:none}audio,canvas,iframe,img,svg,video{vertical-align:middle}audio:not([controls]){display:none;height:0}img{border-style:none}svg{fill:currentColor}svg:not(:root){overflow:hidden}table{border-collapse:collapse}button,input,select,textarea{color:inherit;font-size:inherit;line-height:inherit}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:ButtonText dotted 1px}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}textarea{overflow:auto;resize:vertical}[type=checkbox],[type=radio]{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}.map-container #map,body,html{height:100vh}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}[hidden],template{display:none}[tabindex],a,area,button,input,label,select,summary,textarea{-ms-touch-action:manipulation;touch-action:manipulation}[aria-busy=true]{cursor:progress}[aria-hidden=false][hidden]:not(:focus){clip:rect(0,0,0,0);display:inherit;position:absolute}*{box-sizing:border-box}body,html{background-color:#333;font-family:Lato,sans-serif}.site-wrapper{display:flex}.map-container{position:relative;height:100vh;width:100vw;flex:1 1 auto;transition:.6s}.gm-style-iw{transition:2s;width:350px!important;top:15px!important;background:rgba(0,0,0,.6);box-shadow:3px 3px 16px rgba(0,0,0,.6);border:1px solid #000;border-radius:5em 0}.info-box-custom{margin:0;padding:1em;height:auto;animation:fadeIn 1.2s}.info-box-custom__icon{background:#fff}.info-box-custom__title{color:#fff;font-size:2rem;margin:0 0 .2em;font-weight:300;letter-spacing:1px;text-rendering:optimizeLegibility}.info-box-custom__img{max-width:100%!important;margin-bottom:.5em!important}.info-box-custom__description{color:#fff;font-size:1rem;line-height:1.4rem}.gmap-close-btn{width:3em!important;height:3em!important;border-radius:100%}.cat-filter input{text-align:center;border:none;width:100%;padding:1em;letter-spacing:1px;background:#A3CBF0;color:#fff;transition:.5s}.cat-filter input::placeholder{letter-spacing:1px;color:#fff;transition:.5s}.cat-filter input:focus{outline:0;background:#fafafa;color:#fff}.cat-filter input:focus::placeholder{letter-spacing:2px;color:#000}.logo{margin:0 0 1em 1em;padding:1em 0 0;font-size:1em;display:inline-block}.sidebar-options{position:absolute;width:250px;height:100vh;background:rgba(0,0,0,.1)}.sidebar-options__nav__header{display:flex;flex-flow:row wrap;justify-content:space-around;align-content:space-between}.sidebar-options__show-hide{display:flex;flex-flow:row nowrap;justify-content:center;background:rgba(0,0,0,.2);margin:0;padding:0}.sidebar-options__show-hide__button{background:#666;border:0;box-shadow:none;margin:.5em 0;font-size:1.5rem;padding:.5em 1em;transition:.5s}.sidebar-options__show-hide__button:hover{background:#999}.sidebar-options .toggle-btn{position:absolute;z-index:100;right:202px;background:#fff;transition:.6s}.sidebar-options .toggle-btn .hamburger-color{background:#000!important;fill:pink}.sidebar-options .toggle-btn.sidebar-open{right:250px}.sidebar-options .btn-addcat__img{max-width:32px}.sidebar-open{transform:translate3d(250px,0,0)}.catlist{margin:0;padding:0;text-align:center}.catlist__cat{display:block;text-decoration:none;color:#fafafa;font-size:1.2em;padding:.3em;border-bottom:1px solid rgba(163,203,240,.2);background:rgba(163,203,240,.2);transition:.5s}.catlist__cat:hover{background:#000;color:#fff}@keyframes fadeIn{from{opacity:0}to{opacity:1}}@keyframes colorPulseSVG{0%,100%{fill:#fff}50%{fill:#04580A}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNhbml0aXplLmNzcyIsInBhcnRpYWxzL19iYXNlLnNjc3MiLCJwYXJ0aWFscy9fbWFwLnNjc3MiLCJwYXJ0aWFscy9fbWl4aW5zLnNjc3MiLCJwYXJ0aWFscy9fdmFyaWFibGVzLnNjc3MiLCJwYXJ0aWFscy9fZm9ybXMuc2NzcyIsInBhcnRpYWxzL19zaWRlYmFyLnNjc3MiLCJwYXJ0aWFscy9fY2F0bGlzdC5zY3NzIiwicGFydGlhbHMvX2FuaW1hdGlvbi5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJnRkFtVkMsT0FwUEEsR0ErUEQsTUFGQyxTQUFBLFFBMUZBLE1BbVBBLE9BMUZBLFNBL0lELE1BdUpDLFFBQUEsYUFSQSxTQS9NQSxJQVdELElBNk1DLGVBQUEsU0E4SkEsZ0JBeGlCQSxLQWdqQkEsT0FBQSxRQTFCQSxnQkN4aUJBLE9BR0MsT0FBUSxRRFhzRSxFQVloRixRQURBLFNBRUMsa0JBQUEsVUFDQSxtQkFBQSxRQUFBLFdBQUEsUUFZQSxLQWlYQSxPQXhXQSxtQkFBQSxXQVhELFFBVEMsU0FTQSxnQkFBQSxRQUNBLGVBQUEsUUFDQSxLQVNBLFdBQUEsV0FFQSxxQkFBQSxLQUNBLHlCQUFBLEtBQ0EsUUFZRCxNQTZhQyxRQXZaQSxXQWFELE9BbENBLE9BQ0EsT0FrQ0EsS0F5WkEsS0ExYkEsSUFDQSxRQURDLFFBQUEsTUFDQSxLQWdRQSxPQWFELE1BQ0EsU0FDQSxPQUNBLFNBelFDLE9BQUEsRUFDQSxHQVFBLFVBQUEsSUFDQSxPQUFBLE1BQUEsRUFlQSxPQU9BLE9BQUEsSUFBQSxLQUNBLEdBUUEsbUJBQUEsWUFBQSxXQUFBLFlBQ0EsT0FBQSxFQUVBLE9BVUQsT0FGQyxXQUFBLEtBcURBLEtBV0QsSUEvREMsSUFnRUQsS0F4REMsWUFBQSxVQUFBLFVBQ0EsVUFBQSxJQUNBLEVBV0EsaUJBQUEsWUFDQSw2QkFBQSxRQUNBLFlBUUEsY0FBQSxLQUNBLGdCQUFBLFVBQ0EsZ0JBQUEsVUFBQSxPQUNBLEVBVUQsT0FPQyxZQUFBLE9BYUEs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QWUsY0FDaEIsNEJBRUMsUUFBUyxLQUNULFVBQVcsSUFBQSxPQUNYLGdCQUFpQixPQUNqQixXRnZCSSxlRXdCSixPQUFRLEVBQ1IsUUFBUyxFQUNULG9DQUNFLFdBQVksS0FDWixPQUFRLEVBQ1IsV0FBWSxLQUNaLE9BQVEsS0FBQSxFQUNSLFVBQVcsT0FDWCxRQUFTLEtBQUEsSUh4QmIsV0FENEIsSUdtQjFCLDBDQVNJLFdBQVksS0EzQnBCLDZCQXFDSSxTQUFVLFNBQ1YsUUFBUyxJQUNULE1BQU8sTUFDUCxXQUFXLEtIeENiLFdHeUMyQixJQXpDN0IsOENBNENNLFdBQVksZUFDWixLQUFNLEtBN0NaLDBDQWlETSxNQUFPLE1BakRiLGtDQXNETSxVQUFXLEtBQ1osY0FTSCxVQUFXLHVCQUNaLFNDN0VDLE9BQU8sRUFDUCxRQUFRLEVBQ1IsV0FBVyxPQUVYLGNBQ0UsUUFBUSxNQUNSLGdCQUFpQixLQUNqQixNQUFPLFFBQ1AsVUFBVyxNQUNYLFFBQVEsS0FDUixjQUFlLElBQUksTUhKaEIscUJHTUgsV0hORyxxQkRNTCxXQUQ0QixJSVA1QixvQkFZSSxXSFpFLEtHYUYsTUhkRSxLR2VILGtCQ2pCSCxLQUNFLFFBQVMsRUFFWCxHQUNFLFFBQVMsR0FJYix5QkFDRSxHQU1BLEtBTEUsS0pSSSxLSVVOLElBQ0UsS0pUSSIsImZpbGUiOiJzdHlsZXMuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyohIHNhbml0aXplLmNzcyB2NS4wLjAgfCBDQzAgTGljZW5zZSB8IGdpdGh1Yi5jb20vam9uYXRoYW50bmVhbC9zYW5pdGl6ZS5jc3MgKi9cblxuLyogRG9jdW1lbnQgKGh0dHBzOi8vaHRtbC5zcGVjLndoYXR3Zy5vcmcvbXVsdGlwYWdlL3NlbWFudGljcy5odG1sI3NlbWFudGljcylcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogMS4gUmVtb3ZlIHJlcGVhdGluZyBiYWNrZ3JvdW5kcyBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqIDIuIEFkZCBib3ggc2l6aW5nIGluaGVyaXRlbmNlIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICovXG5cbiosXG46OmJlZm9yZSxcbjo6YWZ0ZXIge1xuXHRiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0OyAvKiAxICovXG5cdGJveC1zaXppbmc6IGluaGVyaXQ7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiAxLiBBZGQgdGV4dCBkZWNvcmF0aW9uIGluaGVyaXRhbmNlIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICogMi4gQWRkIHZlcnRpY2FsIGFsaWdubWVudCBpbmhlcml0ZW5jZSBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqL1xuXG46OmJlZm9yZSxcbjo6YWZ0ZXIge1xuXHR0ZXh0LWRlY29yYXRpb246IGluaGVyaXQ7IC8qIDEgKi9cblx0dmVydGljYWwtYWxpZ246IGluaGVyaXQ7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiAxLiBBZGQgYm9yZGVyIGJveCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKiAyLiBBZGQgdGhlIGRlZmF1bHQgY3Vyc29yIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICogMy4gUHJldmVudCBmb250IHNpemUgYWRqdXN0bWVudHMgYWZ0ZXIgb3JpZW50YXRpb24gY2hhbmdlcyBpbiBJRSBhbmQgaU9TLlxuICovXG5cbmh0bWwge1xuXHRib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiAxICovXG5cdGN1cnNvcjogZGVmYXVsdDsgLyogMiAqL1xuXHQtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLyogMyAqL1xuXHQtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDMgKi9cbn1cblxuLyogU2VjdGlvbnMgKGh0dHBzOi8vaHRtbC5zcGVjLndoYXR3Zy5vcmcvbXVsdGlwYWdlL3NlbWFudGljcy5odG1sI3NlY3Rpb25zKVxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cbiAqL1xuXG5hcnRpY2xlLFxuYXNpZGUsXG5mb290ZXIsXG5oZWFkZXIsXG5uYXYsXG5zZWN0aW9uIHtcblx0ZGlzcGxheTogYmxvY2s7XG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBtYXJnaW4gaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cblxuYm9keSB7XG5cdG1hcmdpbjogMDtcbn1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBmb250IHNpemUgYW5kIG1hcmdpbiBvbiBgaDFgIGVsZW1lbnRzIHdpdGhpbiBgc2VjdGlvbmAgYW5kXG4gKiBgYXJ0aWNsZWAgY29udGV4dHMgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgU2FmYXJpLlxuICovXG5cbmgxIHtcblx0Zm9udC1zaXplOiAyZW07XG5cdG1hcmdpbjogLjY3ZW0gMDtcbn1cblxuLyogR3JvdXBpbmcgY29udGVudCAoaHR0cHM6Ly9odG1sLnNwZWMud2hhdHdnLm9yZy9tdWx0aXBhZ2Uvc2VtYW50aWNzLmh0bWwjZ3JvdXBpbmctY29udGVudClcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRS5cbiAqL1xuXG5maWdjYXB0aW9uLFxuZmlndXJlLFxubWFpbiB7IC8qIDEgKi9cblx0ZGlzcGxheTogYmxvY2s7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IG1hcmdpbiBpbiBJRSA4LlxuICovXG5cbmZpZ3VyZSB7XG5cdG1hcmdpbjogMWVtIDQwcHg7XG59XG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gRmlyZWZveC5cbiAqIDIuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UgYW5kIElFLlxuICovXG5cbmhyIHtcblx0Ym94LXNpemluZzogY29udGVudC1ib3g7IC8qIDEgKi9cblx0aGVpZ2h0OiAwOyAvKiAxICovXG5cdG92ZXJmbG93OiB2aXNpYmxlOyAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBsaXN0IHN0eWxlIG9uIG5hdmlnYXRpb24gbGlzdHMgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cblxubmF2IG9sLFxubmF2IHVsIHtcblx0bGlzdC1zdHlsZTogbm9uZTtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbnByZSB7XG5cdGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTsgLyogMSAqL1xuXHRmb250LXNpemU6IDFlbTsgLyogMiAqL1xufVxuXG4vKiBUZXh0LWxldmVsIHNlbWFudGljcyAoaHR0cHM6Ly9odG1sLnNwZWMud2hhdHdnLm9yZy9tdWx0aXBhZ2Uvc2VtYW50aWNzLmh0bWwjdGV4dC1sZXZlbC1zZW1hbnRpY3MpXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIG9uIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbiAqIDIuIFJlbW92ZSBnYXBzIGluIGxpbmtzIHVuZGVybGluZSBpbiBpT1MgOCsgYW5kIFNhZmFyaSA4Ky5cbiAqL1xuXG5hIHtcblx0YmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7IC8qIDEgKi9cblx0LXdlYmtpdC10ZXh0LWRlY29yYXRpb24tc2tpcDogb2JqZWN0czsgLyogMiAqL1xufVxuXG4vKipcbiAqIDEuIFJlbW92ZSB0aGUgYm90dG9tIGJvcmRlciBpbiBGaXJlZm94IDM5LS5cbiAqIDIuIEFkZCB0aGUgY29ycmVjdCB0ZXh0IGRlY29yYXRpb24gaW4gQ2hyb21lLCBFZGdlLCBJRSwgT3BlcmEsIGFuZCBTYWZhcmkuXG4gKi9cblxuYWJiclt0aXRsZV0ge1xuXHRib3JkZXItYm90dG9tOiBub25lOyAvKiAxICovXG5cdHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOyAvKiAyICovXG5cdHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIGRvdHRlZDsgLyogMiAqL1xufVxuXG4vKipcbiAqIFByZXZlbnQgdGhlIGR1cGxpY2F0ZSBhcHBsaWNhdGlvbiBvZiBgYm9sZGVyYCBieSB0aGUgbmV4dCBydWxlIGluIFNhZmFyaSA2LlxuICovXG5cbmIsXG5zdHJvbmcge1xuXHRmb250LXdlaWdodDogaW5oZXJpdDtcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCB3ZWlnaHQgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxuICovXG5cbmIsXG5zdHJvbmcge1xuXHRmb250LXdlaWdodDogYm9sZGVyO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuY29kZSxcbmtiZCxcbnNhbXAge1xuXHRmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7IC8qIDEgKi9cblx0Zm9udC1zaXplOiAxZW07IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzdHlsZSBpbiBBbmRyb2lkIDQuMy0uXG4gKi9cblxuZGZuIHtcblx0Zm9udC1zdHlsZTogaXRhbGljO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBiYWNrZ3JvdW5kIGFuZCBjb2xvciBpbiBJRSA5LS5cbiAqL1xuXG5tYXJrIHtcblx0YmFja2dyb3VuZC1jb2xvcjogI2ZmZmYwMDtcblx0Y29sb3I6ICMwMDAwMDA7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc21hbGwge1xuXHRmb250LXNpemU6IDgwJTtcbn1cblxuLyoqXG4gKiBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBlbGVtZW50cyBmcm9tIGFmZmVjdGluZyB0aGUgbGluZSBoZWlnaHQgaW5cbiAqIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zdWIsXG5zdXAge1xuXHRmb250LXNpemU6IDc1JTtcblx0bGluZS1oZWlnaHQ6IDA7XG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcblx0dmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG5zdWIge1xuXHRib3R0b206IC0uMjVlbTtcbn1cblxuc3VwIHtcblx0dG9wOiAtLjVlbTtcbn1cblxuLypcbiAqIFJlbW92ZSB0aGUgdGV4dCBzaGFkb3cgb24gdGV4dCBzZWxlY3Rpb25zIChvcGluaW9uYXRlZCkuXG4gKiAxLiBSZXN0b3JlIHRoZSBjb2xvcmluZyB1bmRvbmUgYnkgZGVmaW5pbmcgdGhlIHRleHQgc2hhZG93IChvcGluaW9uYXRlZCkuXG4gKi9cblxuOjotbW96LXNlbGVjdGlvbiB7XG5cdGJhY2tncm91bmQtY29sb3I6ICNiM2Q0ZmM7IC8qIDEgKi9cblx0Y29sb3I6ICMwMDAwMDA7IC8qIDEgKi9cblx0dGV4dC1zaGFkb3c6IG5vbmU7XG59XG5cbjo6c2VsZWN0aW9uIHtcblx0YmFja2dyb3VuZC1jb2xvcjogI2IzZDRmYzsgLyogMSAqL1xuXHRjb2xvcjogIzAwMDAwMDsgLyogMSAqL1xuXHR0ZXh0LXNoYWRvdzogbm9uZTtcbn1cblxuLyogRW1iZWRkZWQgY29udGVudCAoaHR0cHM6Ly9odG1sLnNwZWMud2hhdHdnLm9yZy9tdWx0aXBhZ2UvZW1iZWRkZWQtY29udGVudC5odG1sI2VtYmVkZGVkLWNvbnRlbnQpXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKlxuICogQ2hhbmdlIHRoZSBhbGlnbm1lbnQgb24gbWVkaWEgZWxlbWVudHMgaW4gYWxsIGJyb3dlcnMgKG9waW5pb25hdGVkKS5cbiAqL1xuXG5hdWRpbyxcbmNhbnZhcyxcbmlmcmFtZSxcbmltZyxcbnN2ZyxcbnZpZGVvIHtcblx0dmVydGljYWwtYWxpZ246IG1pZGRsZTtcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cbiAqL1xuXG5hdWRpbyxcbnZpZGVvIHtcblx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIGlPUyA0LTcuXG4gKi9cblxuYXVkaW86bm90KFtjb250cm9sc10pIHtcblx0ZGlzcGxheTogbm9uZTtcblx0aGVpZ2h0OiAwO1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgYm9yZGVyIG9uIGltYWdlcyBpbnNpZGUgbGlua3MgaW4gSUUgMTAtLlxuICovXG5cbmltZyB7XG5cdGJvcmRlci1zdHlsZTogbm9uZTtcbn1cblxuLyoqXG4gKiBDaGFuZ2UgdGhlIGZpbGwgY29sb3IgdG8gbWF0Y2ggdGhlIHRleHQgY29sb3IgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cblxuc3ZnIHtcblx0ZmlsbDogY3VycmVudENvbG9yO1xufVxuXG4vKipcbiAqIEhpZGUgdGhlIG92ZXJmbG93IGluIElFLlxuICovXG5cbnN2Zzpub3QoOnJvb3QpIHtcblx0b3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLyogVGFidWxhciBkYXRhIChodHRwczovL2h0bWwuc3BlYy53aGF0d2cub3JnL211bHRpcGFnZS90YWJsZXMuaHRtbCN0YWJsZXMpXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIENvbGxhcHNlIGJvcmRlciBzcGFjaW5nXG4gKi9cblxudGFibGUge1xuXHRib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xufVxuXG4vKiBGb3JtcyAoaHR0cHM6Ly9odG1sLnNwZWMud2hhdHdnLm9yZy9tdWx0aXBhZ2UvZm9ybXMuaHRtbCNmb3JtcylcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogUmVtb3ZlIHRoZSBtYXJnaW4gaW4gRmlyZWZveCBhbmQgU2FmYXJpLlxuICovXG5cbmJ1dHRvbixcbmlucHV0LFxub3B0Z3JvdXAsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG5cdG1hcmdpbjogMDtcbn1cblxuLyoqXG4gKiBJbmhlcml0IHN0eWxpbmcgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cblxuYnV0dG9uLFxuaW5wdXQsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG5cdGNvbG9yOiBpbmhlcml0O1xuXHRmb250LXNpemU6IGluaGVyaXQ7XG5cdGxpbmUtaGVpZ2h0OiBpbmhlcml0O1xufVxuXG4vKipcbiAqIFNob3cgdGhlIG92ZXJmbG93IGluIElFLlxuICogMS4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZS5cbiAqL1xuXG5idXR0b24sXG5pbnB1dCB7IC8qIDEgKi9cblx0b3ZlcmZsb3c6IHZpc2libGU7XG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBFZGdlLCBGaXJlZm94LCBhbmQgSUUuXG4gKiAxLiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEZpcmVmb3guXG4gKi9cblxuYnV0dG9uLFxuc2VsZWN0IHsgLyogMSAqL1xuXHR0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbn1cblxuLyoqXG4gKiAxLiBQcmV2ZW50IGEgV2ViS2l0IGJ1ZyB3aGVyZSAoMikgZGVzdHJveXMgbmF0aXZlIGBhdWRpb2AgYW5kIGB2aWRlb2BcbiAqICAgIGNvbnRyb2xzIGluIEFuZHJvaWQgNC5cbiAqIDIuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKi9cblxuYnV0dG9uLFxuaHRtbCBbdHlwZT1cImJ1dHRvblwiXSwgLyogMSAqL1xuW3R5cGU9XCJyZXNldFwiXSxcblt0eXBlPVwic3VibWl0XCJdIHtcblx0LXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGlubmVyIGJvcmRlciBhbmQgcGFkZGluZyBpbiBGaXJlZm94LlxuICovXG5cbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwiYnV0dG9uXCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJyZXNldFwiXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwic3VibWl0XCJdOjotbW96LWZvY3VzLWlubmVyIHtcblx0Ym9yZGVyLXN0eWxlOiBub25lO1xuXHRwYWRkaW5nOiAwO1xufVxuXG4vKipcbiAqIFJlc3RvcmUgdGhlIGZvY3VzIHN0eWxlcyB1bnNldCBieSB0aGUgcHJldmlvdXMgcnVsZS5cbiAqL1xuXG5idXR0b246LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cImJ1dHRvblwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwicmVzZXRcIl06LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cInN1Ym1pdFwiXTotbW96LWZvY3VzcmluZyB7XG5cdG91dGxpbmU6IDFweCBkb3R0ZWQgQnV0dG9uVGV4dDtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSB0ZXh0IHdyYXBwaW5nIGluIEVkZ2UgYW5kIElFLlxuICogMi4gQ29ycmVjdCB0aGUgY29sb3IgaW5oZXJpdGFuY2UgZnJvbSBgZmllbGRzZXRgIGVsZW1lbnRzIGluIElFLlxuICogMy4gUmVtb3ZlIHRoZSBwYWRkaW5nIHNvIGRldmVsb3BlcnMgYXJlIG5vdCBjYXVnaHQgb3V0IHdoZW4gdGhleSB6ZXJvIG91dFxuICogICAgYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxubGVnZW5kIHtcblx0Ym94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xuXHRjb2xvcjogaW5oZXJpdDsgLyogMiAqL1xuXHRkaXNwbGF5OiB0YWJsZTsgLyogMSAqL1xuXHRtYXgtd2lkdGg6IDEwMCU7IC8qIDEgKi9cblx0cGFkZGluZzogMDsgLyogMyAqL1xuXHR3aGl0ZS1zcGFjZTogbm9ybWFsOyAvKiAxICovXG59XG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgdmVydGljYWwgYWxpZ25tZW50IGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuICovXG5cbnByb2dyZXNzIHtcblx0ZGlzcGxheTogaW5saW5lLWJsb2NrOyAvKiAxICovXG5cdHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgLyogMiAqL1xufVxuXG4vKipcbiAqIDEuIFJlbW92ZSB0aGUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUuXG4gKiAyLiBDaGFuZ2UgdGhlIHJlc2l6ZSBkaXJlY3Rpb24gb24gdGV4dGFyZWFzIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICovXG5cbnRleHRhcmVhIHtcblx0b3ZlcmZsb3c6IGF1dG87IC8qIDEgKi9cblx0cmVzaXplOiB2ZXJ0aWNhbDsgLyogMiAqL1xufVxuXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIElFIDEwLS5cbiAqIDIuIFJlbW92ZSB0aGUgcGFkZGluZyBpbiBJRSAxMC0uXG4gKi9cblxuW3R5cGU9XCJjaGVja2JveFwiXSxcblt0eXBlPVwicmFkaW9cIl0ge1xuXHRib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiAxICovXG5cdHBhZGRpbmc6IDA7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBjdXJzb3Igc3R5bGUgb2YgaW5jcmVtZW50IGFuZCBkZWNyZW1lbnQgYnV0dG9ucyBpbiBDaHJvbWUuXG4gKi9cblxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG5cdGhlaWdodDogYXV0bztcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBvZGQgYXBwZWFyYW5jZSBpbiBDaHJvbWUgYW5kIFNhZmFyaS5cbiAqIDIuIENvcnJlY3QgdGhlIG91dGxpbmUgc3R5bGUgaW4gU2FmYXJpLlxuICovXG5cblt0eXBlPVwic2VhcmNoXCJdIHtcblx0LXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7IC8qIDEgKi9cblx0b3V0bGluZS1vZmZzZXQ6IC0ycHg7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGlubmVyIHBhZGRpbmcgYW5kIGNhbmNlbCBidXR0b25zIGluIENocm9tZSBhbmQgU2FmYXJpIG9uIG1hY09TLlxuICovXG5cblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1jYW5jZWwtYnV0dG9uLFxuW3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuXHQtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqIDIuIENoYW5nZSBmb250IHByb3BlcnRpZXMgdG8gYGluaGVyaXRgIGluIFNhZmFyaS5cbiAqL1xuXG46Oi13ZWJraXQtZmlsZS11cGxvYWQtYnV0dG9uIHtcblx0LXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IC8qIDEgKi9cblx0Zm9udDogaW5oZXJpdDsgLyogMiAqL1xufVxuXG4vKiBJbnRlcmFjdGl2ZSBlbGVtZW50cyAoaHR0cHM6Ly9odG1sLnNwZWMud2hhdHdnLm9yZy9tdWx0aXBhZ2UvZm9ybXMuaHRtbCNpbnRlcmFjdGl2ZS1lbGVtZW50cylcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIEVkZ2UsIElFLCBhbmQgRmlyZWZveC5cbiAqL1xuXG5kZXRhaWxzLCAvKiAxICovXG5tZW51IHtcblx0ZGlzcGxheTogYmxvY2s7XG59XG5cbi8qXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc3VtbWFyeSB7XG5cdGRpc3BsYXk6IGxpc3QtaXRlbTtcbn1cblxuLyogU2NyaXB0aW5nIChodHRwczovL2h0bWwuc3BlYy53aGF0d2cub3JnL211bHRpcGFnZS9zY3JpcHRpbmcuaHRtbCNzY3JpcHRpbmctMylcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXG4gKi9cblxuY2FudmFzIHtcblx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFLlxuICovXG5cbnRlbXBsYXRlIHtcblx0ZGlzcGxheTogbm9uZTtcbn1cblxuLyogVXNlciBpbnRlcmFjdGlvbiAoaHR0cHM6Ly9odG1sLnNwZWMud2hhdHdnLm9yZy9tdWx0aXBhZ2UvaW50ZXJhY3Rpb24uaHRtbCNlZGl0aW5nKVxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLypcbiAqIFJlbW92ZSB0aGUgdGFwcGluZyBkZWxheSBvbiBjbGlja2FibGUgZWxlbWVudHMgKG9waW5pb25hdGVkKS5cbiAqIDEuIFJlbW92ZSB0aGUgdGFwcGluZyBkZWxheSBpbiBJRSAxMC5cbiAqL1xuXG5hLFxuYXJlYSxcbmJ1dHRvbixcbmlucHV0LFxubGFiZWwsXG5zZWxlY3QsXG5zdW1tYXJ5LFxudGV4dGFyZWEsXG5bdGFiaW5kZXhdIHtcblx0LW1zLXRvdWNoLWFjdGlvbjogbWFuaXB1bGF0aW9uOyAvKiAxICovXG5cdHRvdWNoLWFjdGlvbjogbWFuaXB1bGF0aW9uO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwLS5cbiAqL1xuXG5baGlkZGVuXSB7XG5cdGRpc3BsYXk6IG5vbmU7XG59XG5cbi8qIEFSSUEgKGh0dHBzOi8vdzNjLmdpdGh1Yi5pby9odG1sLWFyaWEvKVxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBDaGFuZ2UgdGhlIGN1cnNvciBvbiBidXN5IGVsZW1lbnRzIChvcGluaW9uYXRlZCkuXG4gKi9cblxuW2FyaWEtYnVzeT1cInRydWVcIl0ge1xuXHRjdXJzb3I6IHByb2dyZXNzO1xufVxuXG4vKlxuICogQ2hhbmdlIHRoZSBjdXJzb3Igb24gY29udHJvbCBlbGVtZW50cyAob3BpbmlvbmF0ZWQpLlxuICovXG5cblthcmlhLWNvbnRyb2xzXSB7XG5cdGN1cnNvcjogcG9pbnRlcjtcbn1cblxuLypcbiAqIENoYW5nZSB0aGUgZGlzcGxheSBvbiB2aXN1YWxseSBoaWRkZW4gYWNjZXNzaWJsZSBlbGVtZW50cyAob3BpbmlvbmF0ZWQpLlxuICovXG5cblthcmlhLWhpZGRlbj1cImZhbHNlXCJdW2hpZGRlbl06bm90KDpmb2N1cykge1xuXHRjbGlwOiByZWN0KDAsIDAsIDAsIDApO1xuXHRkaXNwbGF5OiBpbmhlcml0O1xuXHRwb3NpdGlvbjogYWJzb2x1dGU7XG59XG5cbi8qXG4gKiBDaGFuZ2UgdGhlIGN1cnNvciBvbiBkaXNhYmxlZCwgbm90LWVkaXRhYmxlLCBvciBvdGhlcndpc2VcbiAqIGlub3BlcmFibGUgZWxlbWVudHMgKG9waW5pb25hdGVkKS5cbiAqL1xuXG5bYXJpYS1kaXNhYmxlZF0ge1xuXHRjdXJzb3I6IGRlZmF1bHQ7XG59XG4iLCIqIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuaHRtbCwgYm9keSB7XG4gIGhlaWdodDogMTAwdmg7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzMzM7XG4gIGZvbnQtZmFtaWx5OiAnTGF0bycsIHNhbnMtc2VyaWY7XG59XG5cbmJ1dHRvbiB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuLnNpdGUtd3JhcHBlciB7XG4gIGRpc3BsYXk6ZmxleDtcbn0iLCIvKipcbiAqIEdvb2dsZSBNYXBzIFN0eWxlXG4gKiBJbmZvIGJveGVzIGFuZCBjYW52YXNcbiAqL1xuLm1hcC1jb250YWluZXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGhlaWdodDogMTAwdmg7XG4gIHdpZHRoOiAxMDB2dztcbiAgZmxleDogMSAxIGF1dG87XG4gIC8vdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAwLCAwKTtcbiAgQGluY2x1ZGUgdHJhbnNpdGlvbi1iYXNlKC42cyk7XG4gICNtYXAge1xuICAgIGhlaWdodDogMTAwdmg7XG4gIH1cbn1cblxuXG4uZ20tc3R5bGUtaXcge1xuICBAaW5jbHVkZSB0cmFuc2l0aW9uLWJhc2UoMnMpO1xuICB3aWR0aDogMzUwcHggIWltcG9ydGFudDtcbiAgdG9wOiAxNXB4ICFpbXBvcnRhbnQ7XG4gIGJhY2tncm91bmQ6IHJnYmEoJGJsYWNrLCAuNik7XG4gIGJveC1zaGFkb3c6IDNweCAzcHggMTZweCByZ2JhKCRibGFjaywgLjYpO1xuICBib3JkZXI6IDFweCBzb2xpZCAkYmxhY2s7XG4gIGJvcmRlci1yYWRpdXM6IDVlbSAwO1xufVxuXG4uaW5mby1ib3gtY3VzdG9tIHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAxZW07XG4gIGhlaWdodDogYXV0bztcbiAgQGluY2x1ZGUgZmFkZS1pbigxLjJzKTtcblxuICAmX19pY29uIHtcbiAgICBiYWNrZ3JvdW5kOiAkd2hpdGU7XG4gIH1cbiAgJl9fdGl0bGUge1xuICAgIGNvbG9yOiAkd2hpdGU7XG4gICAgZm9udC1zaXplOiAycmVtO1xuICAgIG1hcmdpbjogMCAwIC4yZW0gMDtcbiAgICBmb250LXdlaWdodDogMzAwO1xuICAgIGxldHRlci1zcGFjaW5nOiAxcHg7XG4gICAgdGV4dC1yZW5kZXJpbmc6IG9wdGltaXplTGVnaWJpbGl0eTtcbiAgfVxuICAmX19pbWcge1xuICAgIG1heC13aWR0aDogMTAwJSAhaW1wb3J0YW50O1xuICAgIG1hcmdpbi1ib3R0b206IC41ZW0gIWltcG9ydGFudDtcbiAgfVxuXG4gICZfX2Rlc2NyaXB0aW9uIHtcbiAgICBjb2xvcjogJHdoaXRlO1xuICAgIGZvbnQtc2l6ZTogMXJlbTtcbiAgICBsaW5lLWhlaWdodDogMS40cmVtO1xuICB9XG59XG5cbi5nbWFwLWNsb3NlLWJ0biB7XG4gIHdpZHRoOiAzZW0gIWltcG9ydGFudDtcbiAgaGVpZ2h0OiAzZW0gIWltcG9ydGFudDtcbiAgYm9yZGVyLXJhZGl1czogMTAwJTtcbn0iLCJAbWl4aW4gbWF4LXdpZHRoKCR3aWR0aCkge1xuICBAbWVkaWEgKG1heC13aWR0aDogJHdpZHRoKSB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cblxuQG1peGluIG1pbi13aWR0aCgkd2lkdGgpIHtcbiAgQG1lZGlhIChtYXgtd2lkdGg6ICR3aWR0aCkge1xuICAgIEBjb250ZW50O1xuICB9XG59XG5cbkBtaXhpbiB0cmFuc2l0aW9uLWJhc2UoJHRpbWU6IC41cykge1xuICB0cmFuc2l0aW9uOiAkdGltZTtcbn1cblxuQG1peGluIGZhZGUtaW4oJHRpbWU6IC41cykge1xuICBhbmltYXRpb246IGZhZGVJbiAkdGltZTtcbn1cbiIsIi8qKlxuICogVmFyaWFibGVzXG4gKlxuICovXG4kd2hpdGU6ICNmZmY7XG4kYmxhY2s6ICMwMDA7XG4kZ3JlZW46ICMwNDU4MEE7XG4kYmx1ZTogI0EzQ0JGMDtcblxuJGxnQnJlYWtwb2ludDogMTIwMHB4O1xuJG1kQnJlYWtwb2ludDogODAwcHg7XG4iLCIuY2F0LWZpbHRlciB7XG4gIGlucHV0IHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHBhZGRpbmc6IDFlbTtcbiAgICBsZXR0ZXItc3BhY2luZzogMXB4O1xuICAgIGJhY2tncm91bmQ6ICRibHVlO1xuICAgIGNvbG9yOiAkd2hpdGU7XG4gICAgdHJhbnNpdGlvbjogLjVzO1xuICAgICY6OnBsYWNlaG9sZGVyIHtcbiAgICAgIGxldHRlci1zcGFjaW5nOiAxcHg7XG4gICAgICBjb2xvcjogJHdoaXRlO1xuICAgICAgQGluY2x1ZGUgdHJhbnNpdGlvbi1iYXNlKCk7XG4gICAgfVxuICAgICY6Zm9jdXMge1xuICAgICAgb3V0bGluZTogMDtcbiAgICAgIGJhY2tncm91bmQ6IGRhcmtlbigkd2hpdGUsMiUpO1xuICAgICAgY29sb3I6ICR3aGl0ZTtcbiAgICAgICY6OnBsYWNlaG9sZGVyIHtcbiAgICAgICAgbGV0dGVyLXNwYWNpbmc6IDJweDtcbiAgICAgICAgY29sb3I6ICRibGFjaztcbiAgICAgIH1cbiAgICB9XG4gIH1cbn0iLCIvKipcbiAqIExvZ29cbiAqL1xuLmxvZ28ge1xuICBtYXJnaW46IDAgMCAxZW0gMWVtO1xuICBwYWRkaW5nOiAxZW0gMCAwIDA7XG4gIGZvbnQtc2l6ZTogMWVtO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5cbi8qKlxuICogU2lkZWJhclxuICovXG4uc2lkZWJhci1vcHRpb25zIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB3aWR0aDogMjUwcHg7XG4gIGhlaWdodDogMTAwdmg7XG4gIGJhY2tncm91bmQ6IHJnYmEoJGJsYWNrLCAwLjEpO1xuICAmX19uYXZfX2hlYWRlciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWZsb3c6IHJvdyB3cmFwO1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xuICAgIGFsaWduLWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIH1cbiAgJl9fc2hvdy1oaWRlIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZmxvdzogcm93IG5vd3JhcDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBiYWNrZ3JvdW5kOiByZ2JhKCRibGFjaywgLjIpO1xuICAgIG1hcmdpbjogMDtcbiAgICBwYWRkaW5nOiAwO1xuICAgICZfX2J1dHRvbiB7XG4gICAgICBiYWNrZ3JvdW5kOiBsaWdodGVuKCRibGFjaywgNDAlKTtcbiAgICAgIGJvcmRlcjogMDtcbiAgICAgIGJveC1zaGFkb3c6IG5vbmU7XG4gICAgICBtYXJnaW46IC41ZW0gMDtcbiAgICAgIGZvbnQtc2l6ZTogMS41cmVtO1xuICAgICAgcGFkZGluZzogLjVlbSAxZW07XG4gICAgICBAaW5jbHVkZSB0cmFuc2l0aW9uLWJhc2UoKTtcbiAgICAgICY6aG92ZXIge1xuICAgICAgICBiYWNrZ3JvdW5kOiBsaWdodGVuKCRibGFjaywgNjAlKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogSGFtYnVyZ2VyIGljb24gc2hvd24gd2hlbiBtZW51IGlzIG9mZiBzY3JlZW5cbiAgICpcbiAgICovXG4gIC50b2dnbGUtYnRuIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgei1pbmRleDogMTAwO1xuICAgIHJpZ2h0OiAyMDJweDtcbiAgICBiYWNrZ3JvdW5kOmxpZ2h0ZW4oJGJsdWUsIDI1JSk7XG4gICAgQGluY2x1ZGUgdHJhbnNpdGlvbi1iYXNlKC42cyk7XG5cbiAgICAuaGFtYnVyZ2VyLWNvbG9yIHtcbiAgICAgIGJhY2tncm91bmQ6IGJsYWNrICFpbXBvcnRhbnQ7XG4gICAgICBmaWxsOiBwaW5rO1xuICAgIH1cblxuICAgICYuc2lkZWJhci1vcGVuIHtcbiAgICAgIHJpZ2h0OiAyNTBweDtcbiAgICB9XG4gIH1cbiAgLmJ0bi1hZGRjYXQge1xuICAgICZfX2ltZyB7XG4gICAgICBtYXgtd2lkdGg6IDMycHg7XG4gICAgfVxuICB9XG59XG5cblxuLyoqXG4gKiBUb2dnbGUgU2lkZWJhciBhbmQgR29vZ2xlIE1hcFxuICovXG4uc2lkZWJhci1vcGVuIHtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgyNTBweCwgMCwgMCk7XG59IiwiLmNhdGxpc3Qge1xuICBtYXJnaW46MDtcbiAgcGFkZGluZzowO1xuICB0ZXh0LWFsaWduOmNlbnRlcjtcblxuICAmX19jYXQge1xuICAgIGRpc3BsYXk6YmxvY2s7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgIGNvbG9yOiBkYXJrZW4oJHdoaXRlLCAyJSk7XG4gICAgZm9udC1zaXplOiAxLjJlbTtcbiAgICBwYWRkaW5nOi4zZW07XG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHJnYmEoJGJsdWUsLjIpO1xuXG4gICAgYmFja2dyb3VuZDpyZ2JhKCRibHVlLC4yKTtcblxuICAgIEBpbmNsdWRlIHRyYW5zaXRpb24tYmFzZSgpO1xuICAgICY6aG92ZXIge1xuICAgICAgYmFja2dyb3VuZDokYmxhY2s7XG4gICAgICBjb2xvcjokd2hpdGU7XG4gICAgfVxuICB9XG5cbn1cbiIsIi8qIEZhZGUgQW5pbWF0aW9uICovXG5Aa2V5ZnJhbWVzIGZhZGVJbiB7XG4gIGZyb20ge1xuICAgIG9wYWNpdHk6IDA7XG4gIH1cbiAgdG8ge1xuICAgIG9wYWNpdHk6IDE7XG4gIH1cbn1cblxuQGtleWZyYW1lcyBjb2xvclB1bHNlU1ZHIHtcbiAgMCUge1xuICAgIGZpbGw6ICR3aGl0ZTtcbiAgfVxuICA1MCUge1xuICAgIGZpbGw6ICRncmVlbjtcbiAgfVxuICAxMDAlIHtcbiAgICBmaWxsOiAkd2hpdGU7XG4gIH1cbn0iXX0= */
