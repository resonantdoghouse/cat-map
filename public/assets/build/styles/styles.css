/*! sanitize.css v5.0.0 | CC0 License | github.com/jonathantneal/sanitize.css */button,hr,input{overflow:visible}audio,canvas,progress,video{display:inline-block}progress,sub,sup{vertical-align:baseline}[aria-disabled],html{cursor:default}[aria-controls],button{cursor:pointer}*,::after,::before{background-repeat:no-repeat;-webkit-box-sizing:inherit;box-sizing:inherit}html,legend{-webkit-box-sizing:border-box}::after,::before{text-decoration:inherit;vertical-align:inherit}html{box-sizing:border-box;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section{display:block}body,button,input,optgroup,select,textarea{margin:0}h1{font-size:2em;margin:.67em 0}figure{margin:1em 40px}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0}nav ol,nav ul{list-style:none}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}a{background-color:transparent;-webkit-text-decoration-skip:objects}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:bolder}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative}sub{bottom:-.25em}sup{top:-.5em}::-moz-selection{background-color:#b3d4fc;color:#000;text-shadow:none}::selection{background-color:#b3d4fc;color:#000;text-shadow:none}audio,canvas,iframe,img,svg,video{vertical-align:middle}audio:not([controls]){display:none;height:0}img{border-style:none}svg{fill:currentColor}svg:not(:root){overflow:hidden}table{border-collapse:collapse}button,input,select,textarea{color:inherit;font-size:inherit;line-height:inherit}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:ButtonText dotted 1px}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}textarea{overflow:auto;resize:vertical}[type=checkbox],[type=radio]{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}.map-container #map,body,html{height:100vh}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}[hidden],template{display:none}[tabindex],a,area,button,input,label,select,summary,textarea{-ms-touch-action:manipulation;touch-action:manipulation}[aria-busy=true]{cursor:progress}[aria-hidden=false][hidden]:not(:focus){clip:rect(0,0,0,0);display:inherit;position:absolute}*{box-sizing:border-box}body,html{background-color:#333;font-family:Lato,sans-serif}.site-wrapper{display:flex}.map-container{position:relative;height:100vh;width:100%;flex:1;transform:translate3d(0,0,0);transition:transform .3s}.gm-style-iw{text-align:center;overflow:scroll;padding:0;margin:0;width:350px!important;top:15px!important;background:rgba(0,0,0,.7);box-shadow:3px 3px 10px rgba(0,0,0,.75);border:none;border-radius:5em 0}.info-box-custom{text-align:center;color:#fff;border-radius:.2em;margin:0;padding:1em;animation:fadeIn .8s}.info-box-custom__icon{background:red}.info-box-custom__title{font-size:1.6em;margin:0 0 .5em;font-weight:300;letter-spacing:1px}.info-box-custom__img{max-width:310px!important;margin-bottom:.5em!important}.info-box-custom__description{color:#fff;font-size:1.1em;line-height:1.6em}.gmap-close-btn{width:36px!important;height:36px!important}.cat-filter{background:#000}.cat-filter input{text-align:center;border:none;width:100%;padding:.5em;letter-spacing:1px;background:#fff;color:#000;transition:.5s}.cat-filter input:focus{outline:0;background:#000;color:#fff}.cat-filter input::placeholder{letter-spacing:1px;color:#000}.logo{margin:0 0 1em 1em;padding:1em 0 0;font-size:1em;display:inline-block}.sidebar-options{position:absolute;width:250px;height:100vh;background:rgba(255,255,255,.9)}.sidebar-options__nav__header{position:relative;display:flex;flex-flow:row wrap;justify-content:space-around;align-content:space-between}.sidebar-options__show-hide{display:flex;flex-flow:row wrap;justify-content:center;background:rgba(0,0,0,.2);margin:0;padding:0}.sidebar-options__show-hide__button{margin:.5em 0;padding:.5em}.sidebar-options .toggle-btn{position:absolute;z-index:100;right:202px;transition:.3s}.sidebar-options .toggle-btn.sidebar-open{right:250px}.sidebar-options .btn-addcat__img{max-width:32px}.sidebar-open{transform:translate3d(250px,0,0)}.catlist{margin:0;padding:0;text-align:center}.catlist__cat{display:block;text-decoration:none;color:#000;font-size:1.2em;padding:.3em;border-bottom:1px solid rgba(0,0,0,.2);background:rgba(255,255,255,.6);transition:.3s}.catlist__cat:hover{background:#000;color:#fff}@keyframes fadeIn{from{opacity:0}to{opacity:1}}@keyframes colorPulseSVG{0%,100%{fill:#fff}50%{fill:#5cb85c}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
